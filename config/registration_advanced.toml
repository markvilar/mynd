[registration.initializer]
name = "feature_01"
type = "feature"

[[registration.initializer.preprocessors]]
method = "downsample"
parameters = { spacing = 0.20 }

[[registration.initializer.preprocessors]]
method = "estimate_normals"
parameters = { radius = 0.40 }

[registration.initializer.registrator]
algorithm = "feature_matching_ransac"
parameters = { distance_threshold = 0.16, sample_count = 3, mutual_filter = true }

[registration.initializer.registrator.component_types]
feature_extractor = "fpfh"
estimation_method = "point_to_point"
validators = "correspondence_validators"
convergence_criteria = "ransac_convergence_criteria"

[registration.initializer.registrator.component_parameters]
# feature_extractor = { radius = 2.00, neighbours = 300 }
# estimation_method = { with_scaling = true }
# validators = { distance_threshold = 0.16, edge_threshold = 0.95, normal_threshold = 5.0 }
# convergence_criteria = { max_iteration = 1000000000, confidence = 1.0 }



[[registration.incrementors]]
name = "icp_02"
type = "icp"

[[registration.incrementors.preprocessors]]
method = "downsample"
parameters = { spacing = 0.30 }

[registration.incrementors.registrator]
algorithm = "colored_icp"
parameters = { distance_threshold = 0.60 }

[registration.incrementors.registrator.component_types]
estimation_method = "colored_icp"
kernel = "huber"
convergence_criteria = "default"

[registration.incrementors.registrator.component_parameters]
estimation_method = { lambda_geometric = 0.800 }
kernel = { k = 0.40 }
convergence_criteria = { relative_fitness = 1e-6, relative_rmse = 1e-6, max_iteration = 50 }



[[registration.incrementors]]
name = "icp_03"
type = "icp"

[[registration.incrementors.preprocessors]]
method = "downsample"
parameters = { spacing = 0.15 }

[registration.incrementors.registrator]
algorithm = "colored_icp"
parameters = { distance_threshold = 0.30 }

[registration.incrementors.registrator.component_types]
estimation_method = "colored_icp"
kernel = "huber"
convergence_criteria = "default"

[registration.incrementors.registrator.component_parameters]
estimation_method = { lambda_geometric = 0.800 }
kernel = { k = 0.40 }
convergence_criteria = { relative_fitness = 1e-6, relative_rmse = 1e-6, max_iteration = 50 }



[[registration.incrementors]]
name = "icp_04"
type = "icp"

[[registration.incrementors.preprocessors]]
method = "downsample"
parameters = { spacing = 0.05 }

[registration.incrementors.registrator]
algorithm = "colored_icp"
parameters = { distance_threshold = 0.10 }

[registration.incrementors.registrator.component_types]
estimation_method = "colored_icp"
kernel = "huber"
convergence_criteria = "default"

[registration.incrementors.registrator.component_parameters]
estimation_method = { lambda_geometric = 0.800 }
kernel = { k = 0.40 }
convergence_criteria = { relative_fitness = 1e-6, relative_rmse = 1e-6, max_iteration = 50 }
